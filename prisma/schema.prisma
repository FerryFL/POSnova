// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Profile {
    id        String     @id @default(uuid())
    email     String?    @unique
    name      String?
    UMKM      UMKM?      @relation(fields: [UMKMId], references: [id])
    UMKMId    String?    @map("umkm_id")
    UserRole  UserRole[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @default(now()) @updatedAt

    @@map("profile")
}

model Role {
    id        String     @id @default(uuid())
    name      String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @default(now()) @updatedAt
    UserRole  UserRole[]

    @@map("role")
}

model UserRole {
    id     String @id @default(uuid())
    userId String @map("user_id")
    role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
    roleId String @map("role_id")

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
    profileId String?  @map("profile_id")

    @@unique([userId, roleId])
    @@map("user_role")
}

model Kategori {
    id        String   @id @default(uuid())
    nama      String
    status    Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    Produk    Produk[]

    UMKM   UMKM?   @relation(fields: [UMKMId], references: [id])
    UMKMId String?
}

model Varian {
    id           String         @id @default(uuid())
    nama         String
    status       Boolean        @default(false)
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @default(now()) @updatedAt
    // Produk       Produk[]
    ProdukVarian ProdukVarian[]

    UMKM   UMKM?   @relation(fields: [UMKMId], references: [id])
    UMKMId String?
}

model Produk {
    id           String         @id @default(uuid())
    nama         String
    harga        Int
    gambar       String
    kategori     Kategori       @relation(fields: [kategoriId], references: [id])
    // varian       Varian         @relation(fields: [varianId], references: [id])
    stok         Int            @default(0)
    status       Boolean        @default(false)
    createdAt    DateTime       @default(now())
    updatedAt    DateTime       @default(now()) @updatedAt
    kategoriId   String
    ProdukVarian ProdukVarian[]

    UMKM          UMKM?           @relation(fields: [UMKMId], references: [id])
    UMKMId        String?
    TransaksiItem TransaksiItem[]
}

model ProdukVarian {
    produk   Produk @relation(fields: [produkId], references: [id], onDelete: Cascade)
    produkId String

    varian   Varian @relation(fields: [varianId], references: [id], onDelete: Cascade)
    varianId String

    @@id([produkId, varianId])
}

model UMKM {
    id        String   @id @default(uuid())
    nama      String
    alamat    String
    noTelp    String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    Kategori  Kategori[]
    Produk    Produk[]
    Varian    Varian[]
    Profile   Profile[]
    Transaksi Transaksi[]

    @@map("umkm")
}

model Transaksi {
    id               String   @id @default(uuid())
    tanggalTransaksi DateTime @default(now())
    totalHarga       Int
    totalProduk      Int

    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @default(now()) @updatedAt
    transaksiItem TransaksiItem[]

    UMKM   UMKM?   @relation(fields: [UMKMId], references: [id])
    UMKMId String?
}

model TransaksiItem {
    id          String    @id @default(uuid())
    transaksi   Transaksi @relation(fields: [transaksiId], references: [id], onDelete: Cascade)
    transaksiId String

    produk   Produk @relation(fields: [produkId], references: [id])
    produkId String

    jumlah      Int
    hargaSatuan Int
    hargaTotal  Int

    varianId   String?
    varianNama String?
    createdAt  DateTime @default(now())
}
